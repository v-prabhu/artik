[
  {
    "name": "artik-blink-led-python",
    "displayName": "artik-blink-led-python",
    "path": "/artik-blink-led-python",
    "description": "IoT universe's equivalent of the famous \"Hello World\" program - use ARTIK to blink an LED",
    "projectType": "python",
    "mixins": [],
    "attributes": {
    },
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/che-samples/artik-blink-led-python",
      "parameters": {}
    },
    "commands": [],
    "links": [],
    "category": "Samples",
    "tags": [
      "Artik"
    ]
  },
  {
    "name": "artik-sdk-nodejs-samples",
    "displayName": "artik-sdk-nodejs-samples",
    "path": "/artik-sdk-nodejs-samples",
    "description": "A set of sample node.js programs that show use of ARTIK SDK with JavaScript. Navigate to `/test` directory to run scripts",
    "projectType": "node-js",
    "mixins": [],
    "attributes": {
    },
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/SamsungARTIK/artik-sdk.git",
      "parameters": {
        "branch":"1.0-maintenance"
      }
    },
    "commands": [],
    "links": [],
    "category": "Samples",
    "tags": [
      "Artik"
    ]
  },
  {
    "name": "artik-samples",
    "displayName": "artik-samples",
    "path": "/artik-samples",
    "description": "A set of ARTIK SDK samples in C",
    "projectType": "c",
    "mixins": [],
    "attributes": {},
    "projects": [
      {
        "name": "adc",
        "displayName": "adc",
        "path": "/artik-samples/adc",
        "description": "ADC test",
        "type": "c",
        "mixins": [],
        "attributes": {},
        "modules": [],
        "problems": [],
        "source": {},
        "commands": [],
        "links": [],
        "category": "Samples",
        "tags": ["Artik"]
      },
      {
        "name": "bluetooth",
        "displayName": "bluetooth",
        "path": "/artik-samples/bluetooth",
        "description": "Bluetooth test",
        "type": "c",
        "mixins": [],
        "attributes": {},
        "modules": [],
        "problems": [],
        "source": {},
        "commands": [],
        "links": [],
        "category": "Samples",
        "tags": ["Artik"]
      },
      {
        "name": "cloud",
        "displayName": "cloud",
        "path": "/artik-samples/cloud",
        "description": "Cloud test",
        "type": "c",
        "mixins": [],
        "attributes": {},
        "modules": [],
        "problems": [],
        "source": {},
        "commands": [],
        "links": [],
        "category": "Samples",
        "tags": ["Artik"]
      },
      {
        "name": "gpio",
        "displayName": "gpio",
        "path": "/artik-samples/gpio",
        "description": "Gpio test",
        "type": "c",
        "mixins": [],
        "attributes": {},
        "modules": [],
        "problems": [],
        "source": {},
        "commands": [],
        "links": [],
        "category": "Samples",
        "tags": ["Artik"]
      },
      {
        "name": "http",
        "displayName": "http",
        "path": "/artik-samples/http",
        "description": "Http test",
        "type": "c",
        "mixins": [],
        "attributes": {},
        "modules": [],
        "problems": [],
        "source": {},
        "commands": [],
        "links": [],
        "category": "Samples",
        "tags": ["Artik"]
      },
      {
        "name": "i2c",
        "displayName": "i2c",
        "path": "/artik-samples/i2c",
        "description": "i2c test",
        "type": "c",
        "mixins": [],
        "attributes": {},
        "modules": [],
        "problems": [],
        "source": {},
        "commands": [],
        "links": [],
        "category": "Samples",
        "tags": ["Artik"]
      },
      {
        "name": "lwm2m",
        "displayName": "lwm2m",
        "path": "/artik-samples/lwm2m",
        "description": "lwm2m test",
        "type": "c",
        "mixins": [],
        "attributes": {},
        "modules": [],
        "problems": [],
        "source": {},
        "commands": [],
        "links": [],
        "category": "Samples",
        "tags": ["Artik"]
      },
      {
        "name": "media",
        "displayName": "media",
        "path": "/artik-samples/media",
        "description": "Media test",
        "type": "c",
        "mixins": [],
        "attributes": {},
        "modules": [],
        "problems": [],
        "source": {},
        "commands": [],
        "links": [],
        "category": "Samples",
        "tags": ["Artik"]
      },
      {
        "name": "network",
        "displayName": "network",
        "path": "/artik-samples/network",
        "description": "Network test",
        "type": "c",
        "mixins": [],
        "attributes": {},
        "modules": [],
        "problems": [],
        "source": {},
        "commands": [],
        "links": [],
        "category": "Samples",
        "tags": ["Artik"]
      },
      {
        "name": "pwm",
        "displayName": "pwm",
        "path": "/artik-samples/pwm",
        "description": "pwm test",
        "type": "c",
        "mixins": [],
        "attributes": {},
        "modules": [],
        "problems": [],
        "source": {},
        "commands": [],
        "links": [],
        "category": "Samples",
        "tags": ["Artik"]
      },
      {
        "name": "serial",
        "displayName": "serial",
        "path": "/artik-samples/serial",
        "description": "Serial test",
        "type": "c",
        "mixins": [],
        "attributes": {},
        "modules": [],
        "problems": [],
        "source": {},
        "commands": [],
        "links": [],
        "category": "Samples",
        "tags": ["Artik"]
      },
      {
        "name": "spi",
        "displayName": "spi",
        "path": "/artik-samples/spi",
        "description": "Spi test",
        "type": "c",
        "mixins": [],
        "attributes": {},
        "modules": [],
        "problems": [],
        "source": {},
        "commands": [],
        "links": [],
        "category": "Samples",
        "tags": ["Artik"]
      },
      {
        "name": "time",
        "displayName": "time",
        "path": "/artik-samples/time",
        "description": "Time test",
        "type": "c",
        "mixins": [],
        "attributes": {},
        "modules": [],
        "problems": [],
        "source": {},
        "commands": [],
        "links": [],
        "category": "Samples",
        "tags": ["Artik"]
      },
      {
        "name": "websocket",
        "displayName": "websocket",
        "path": "/artik-samples/websocket",
        "description": "Websocket test",
        "type": "c",
        "mixins": [],
        "attributes": {},
        "modules": [],
        "problems": [],
        "source": {},
        "commands": [],
        "links": [],
        "category": "Samples",
        "tags": ["Artik"]
      },
      {
        "name": "wifi",
        "displayName": "wifi",
        "path": "/artik-samples/wifi",
        "description": "WiFi test",
        "type": "c",
        "mixins": [],
        "attributes": {},
        "modules": [],
        "problems": [],
        "source": {},
        "commands": [],
        "links": [],
        "category": "Samples",
        "tags": ["Artik"]
      },
      {
        "name": "zigbee",
        "displayName": "zigbee",
        "path": "/artik-samples/zigbee",
        "description": "Zigbee test",
        "type": "c",
        "mixins": [],
        "attributes": {},
        "modules": [],
        "problems": [],
        "source": {},
        "commands": [],
        "links": [],
        "category": "Samples",
        "tags": ["Artik"]
      }
    ],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/SamsungARTIK/artik-sdk-examples",
      "parameters": {
        "branch": "master"
      }
    },
    "commands": [],
    "links": [],
    "category": "Samples",
    "tags": [
      "Artik"
    ]
  },
  {
    "name": "artik-blink-led",
    "displayName": "artik-blink-led",
    "path": "/artik-blink-led",
    "description": "IoT universe's equivalent of the famous \"Hello World\" program in C - use ARTIK to blink an LED",
    "projectType": "c",
    "mixins": [],
    "attributes": {
    },
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/che-samples/artik-blink-led",
      "parameters": {}
    },
    "commands": [
      {
        "name": "build",
        "type": "custom",
        "commandLine": "cd ${current.project.path} && $CC -g Blink.c",
        "attributes": {
          "previewUrl": ""
        }
      },
      {
        "name": "startgdb",
        "type": "custom",
        "commandLine": "gdbserver :1234 /root/a.out",
        "attributes": {
          "previewUrl": ""
        }
      },
      {
        "name": "stoptgdb",
        "type": "custom",
        "commandLine": "process=$(ps ax | grep \"[g]dbserver\" | awk {'print $1;}')
        if [[ $process ]]; then
      echo 'Stopping GDB server...'
      kill $process
      echo 'GDB server stopped'
      else
      echo 'GDB server is not running'
      fi",
      "attributes": {
        "previewUrl": ""
      }
      }
    ],
    "links": [],
    "category": "Samples",
    "tags": [
      "Artik"
    ]
  },
  {
    "name": "artik-read-button",
    "displayName": "artik-read-button",
    "path": "/artik-read-button",
    "description": "Setting up GPIO as a digital input and use that to read the position of a pushbutton switch",
    "projectType": "c",
    "mixins": [],
    "attributes": {
    },
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/che-samples/artik-read-button",
      "parameters": {}
    },
    "commands": [
      {
        "name": "build",
        "type": "custom",
        "commandLine": "cd ${current.project.path} && $CC -g button.c",
        "attributes": {
          "previewUrl": ""
        }
      },
      {
        "name": "startgdb",
        "type": "custom",
        "commandLine": "gdbserver :1234 /root/a.out",
        "attributes": {
          "previewUrl": ""
        }
      },
      {
        "name": "stoptgdb",
        "type": "custom",
        "commandLine": "process=$(ps ax | grep \"[g]dbserver\" | awk {'print $1;}')
        if [[ $process ]]; then
      echo 'Stopping GDB server...'
      kill $process
      echo 'GDB server stopped'
      else
      echo 'GDB server is not running'
      fi",
      "attributes": {
        "previewUrl": ""
      }
      }
    ],
    "links": [],
    "category": "Samples",
    "tags": [
      "Artik"
    ]
  },
  {
    "name": "artik-weather-station-libcurl-c",
    "displayName": "artik-weather-station-libcurl-c",
    "path": "/artik-weather-station-libcurl-c",
    "description": "Developing an IoT weather station in C",
    "projectType": "c",
    "mixins": [],
    "attributes": {
    },
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/che-samples/artik-weather-station-libcurl-c",
      "parameters": {}
    },
    "commands": [
      {
        "name": "build",
        "type": "custom",
        "commandLine": "gcc /root/WeatherStationLibcurl.c -o /root/WeatherStationLibcurl –lcurl",
        "attributes": {
          "previewUrl": ""
        }
      },
      {
        "name": "run",
        "type": "custom",
        "commandLine": "/root/WeatherStationLibcurl",
        "attributes": {
          "previewUrl": ""
        }
      }
    ],
    "links": [],
    "category": "Samples",
    "tags": [
      "Artik"
    ]
  },
  {
    "name": "artik-weather-station-node",
    "displayName": "artik-weather-station-node",
    "path": "/artik-weather-station-node",
    "description": "Developing an IoT weather station for both native and web developers",
    "projectType": "node-js",
    "mixins": [],
    "attributes": {
    },
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/che-samples/artik-weather-station-node",
      "parameters": {}
    },
    "commands": [
      {
        "name": "run",
        "type": "custom",
        "commandLine": "node /root/WeatherStation_restclient.js",
        "attributes": {
          "previewUrl": ""
        }
      }
    ],
    "links": [],
    "category": "Samples",
    "tags": [
      "Artik",
      "node"
    ]
  },
  {
    "name": "blank-project",
    "displayName": "blank-project",
    "path": "/blank-project",
    "description": "A blank project example.",
    "projectType": "blank",
    "mixins": [],
    "attributes": {
    },
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/che-samples/blank",
      "parameters": {}
    },
    "commands": [],
    "links": [],
    "category": "Samples",
    "tags": [
      "blank"
    ]
  },
  {
    "name": "console-python3-simple",
    "displayName": "console-python3.5-simple",
    "path": "/console-python3-simple",
    "description": "Simple Python3.5 Project.",
    "projectType": "python",
    "mixins": [],
    "attributes": {
      "language": [
        "ruby"
      ]
    },
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/che-samples/console-python3-simple.git",
      "parameters": {}
    },
    "commands": [
      {
        "name": "run",
        "type": "custom",
        "commandLine": "cd ${current.project.path} && python main.py",
        "attributes": {
          "previewUrl": ""
        }
      }
    ],
    "links": [],
    "category": "Samples",
    "tags": [
      "Python 3.5"
    ]
  },
  {
    "name": "web-python2.7-simple",
    "displayName": "web-python2.7-simple",
    "path": "/web-python2.7-simple",
    "description": "Simple Python2.7 Project.",
    "projectType": "python",
    "mixins": [],
    "attributes": {
      "language": [
        "ruby"
      ]
    },
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/che-samples/web-python2.7-simple.git",
      "parameters": {}
    },
    "commands": [
      {
        "name": "run",
        "type": "custom",
        "commandLine": "cd ${current.project.path} && sudo virtualenv /env && sudo pip install -r requirements.txt && python main.py",
        "attributes": {
          "previewUrl": "http://${server.port.8080}"
        }
      }
    ],
    "links": [],
    "category": "Samples",
    "tags": [
      "Python 2.7"
    ]
  },
  {
    "name": "web-rails-simple",
    "displayName": "web-rails-simple",
    "path": "/web-rails-simple",
    "description": "Simple Rails Project.",
    "projectType": "blank",
    "mixins": [],
    "attributes": {
      "language": [
        "rails"
      ]
    },
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/che-samples/web-rails-simple.git",
      "parameters": {}
    },
    "commands": [
      {
        "name": "install dependencies",
        "type": "custom",
        "commandLine": "cd ${current.project.path} && sudo bundle install",
        "attributes": {
          "previewUrl": ""
        }
      },
      {
        "name": "run",
        "type": "custom",
        "commandLine": "cd ${current.project.path} && sudo rails server -b 0.0.0.0",
        "attributes": {
          "previewUrl": "http://${server.port.3000}"
        }
      }
    ],
    "links": [],
    "category": "Samples",
    "tags": [
      "ruby",
      "rails"
    ]
  },
  {
    "name": "console-ruby-simple",
    "displayName": "console-ruby-simple",
    "path": "/console-ruby-simple",
    "description": "Simple Ruby Project.",
    "projectType": "blank",
    "mixins": [],
    "attributes": {
      "language": [
        "ruby"
      ]
    },
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/che-samples/console-ruby-simple.git",
      "parameters": {}
    },
    "commands": [
      {
        "name": "run",
        "type": "custom",
        "commandLine": "cd ${current.project.path} && ruby main.rb",
        "attributes": {
          "previewUrl": ""
        }
      }
    ],
    "links": [],
    "category": "Samples",
    "tags": [
      "ruby",
      "rails"
    ]
  },

  {
    "name": "nodejs-hello-world",
    "displayName": "nodejs-hello-world",
    "path": "/nodejs-hello-world",
    "description": "Simple NodeJS Project.",
    "projectType": "node-js",
    "mixins": [],
    "attributes": {
      "language": [
        "ruby"
      ]
    },
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/che-samples/web-nodejs-sample.git",
      "parameters": {}
    },
    "commands": [
      {
        "name": "run",
        "type": "custom",
        "commandLine": "cd ${current.project.path} && node app/app.js",
        "attributes": {
          "previewUrl": "http://${server.port.3000}"
        }
      }
    ],
    "links": [],
    "category": "Samples",
    "tags": [
      "nodejs",
      "javascript"
    ]
  },
  {
    "name": "web-java-spring",
    "displayName": "web-java-spring",
    "path": "/web-java-spring",
    "description": "A basic example using Spring servlets. The app returns values entered into a submit form.",
    "projectType": "maven",
    "mixins": [],
    "attributes": {
      "language": [
        "java"
      ]
    },
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/che-samples/web-java-spring.git",
      "parameters": {}
    },
    "commands": [
      {
        "name": "build",
        "type": "mvn",
        "commandLine": "mvn -f ${current.project.path} clean install && cp ${current.project.path}/target/*.war $TOMCAT_HOME/webapps/ROOT.war",
        "attributes": {
          "previewUrl": ""
        }
      },
      {
        "name": "run tomcat",
        "type": "custom",
        "commandLine": "$TOMCAT_HOME/bin/catalina.sh run",
        "attributes": {
          "previewUrl": "http://${server.port.8080}"
        }
      },
      {
        "name": "stop tomcat",
        "type": "custom",
        "commandLine": "$TOMCAT_HOME/bin/catalina.sh stop",
        "attributes": {
          "previewUrl": ""
        }
      },
      {
        "name": "build and run",
        "type": "mvn",
        "commandLine": "mvn -f ${current.project.path} clean install && cp ${current.project.path}/target/*.war $TOMCAT_HOME/webapps/ROOT.war && $TOMCAT_HOME/bin/catalina.sh run",
        "attributes": {
          "previewUrl": "http://${server.port.8080}"
        }
      },
      {
        "name": "debug",
        "type": "mvn",
        "commandLine": "mvn -f ${current.project.path} clean install && cp ${current.project.path}/target/*.war $TOMCAT_HOME/webapps/ROOT.war && $TOMCAT_HOME/bin/catalina.sh jpda run",
        "attributes": {
          "previewUrl": "http://${server.port.8080}"
        }
      }
    ],
    "links": [],
    "category": "Samples",
    "tags": [
      "maven",
      "spring",
      "java"
    ]
  },
  {
    "name": "mobile-android-simple",
    "displayName": "mobile-android-simple",
    "path": "/mobile-android-simple",
    "description": "A simple Android app that says current time.",
    "projectType": "maven",
    "mixins": [],
    "attributes": {},
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/che-samples/mobile-android-simple.git",
      "parameters": {}
    },
    "commands": [
      {
        "name": "build",
        "type": "custom",
        "commandLine": "cd ${current.project.path} && mvn clean install",
        "attributes": {
          "previewUrl": "http://${server.port.6080}"
        }
      }
    ],
    "links": [],
    "category": "Samples",
    "tags": [
      "Android",
      "NoVNC"
    ]
  },
  {
    "name": "mobile-android-hello-world",
    "displayName": "mobile-android-hello-world",
    "path": "/mobile-android-hello-world",
    "description": "A simple Hello World Android app.",
    "projectType": "maven",
    "mixins": [],
    "attributes": {},
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/che-samples/mobile-android-hello-world.git",
      "parameters": {}
    },
    "commands": [
      {
        "name": "build",
        "type": "custom",
        "commandLine": "cd ${current.project.path} && mvn clean install",
        "attributes": {
          "previewUrl": "http://${server.port.6080}"
        }
      }
    ],
    "links": [],
    "category": "Samples",
    "tags": [
      "Android",
      "NoVNC"
    ]
  },
  {
    "name": "console-cpp-simple",
    "displayName": "console-cpp-simple",
    "path": "/console-cpp-simple",
    "description": "CPP app that prints Hello World to the console.",
    "projectType": "cpp",
    "mixins": [],
    "attributes": {
      "language": [
        "cpp"
      ]
    },
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/che-samples/console-cpp-simple.git",
      "parameters": {}
    },
    "commands": [
      {
        "name": "build and run",
        "type": "custom",
        "commandLine": "cd ${current.project.path} && make && ./a.out",
        "attributes": {
          "previewUrl": ""
        }
      }
    ],
    "links": [],
    "category": "Samples",
    "tags": [
      "cpp",
      "gcc",
      "Artik"
    ]
  },
  {
    "name": "web-nodejs-simple",
    "displayName": "web-nodejs-simple",
    "path": "/web-nodejs-simple",
    "description": "Yeoman Starter project.",
    "projectType": "blank",
    "mixins": [],
    "attributes": {
      "language": [
        "javascript"
      ]
    },
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/che-samples/web-nodejs-simple.git",
      "parameters": {}
    },
    "commands": [
      {
        "name": "install dependencies",
        "type": "custom",
        "commandLine": "cd ${current.project.path} && npm install --no-bin-links && bower install",
        "attributes": {
          "previewUrl": ""
        }
      },
      {
        "name": "run",
        "type": "custom",
        "commandLine": "cd ${current.project.path} && grunt serve",
        "attributes": {
          "previewUrl": "http://${server.port.9000}"
        }
      }
    ],
    "links": [],
    "category": "Samples",
    "tags": [
      "nodejs",
      "yeoman",
      "javascript"
    ]
  },
  {
    "name": "web-php-simple",
    "displayName": "web-php-simple",
    "path": "/web-php-simple",
    "description": "A hello world PHP script.",
    "projectType": "blank",
    "mixins": [],
    "attributes": {
      "language": [
        "php"
      ]
    },
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/che-samples/web-php-simple.git",
      "parameters": {}
    },
    "commands": [
      {
        "name": "start apache",
        "type": "custom",
        "commandLine": "sudo service apache2 start && sudo tail -f /var/log/apache2/access.log -f /var/log/apache2/error.log",
        "attributes": {
          "previewUrl": "http://${server.port.80}/${current.project.relpath}"
        }
      },
      {
        "name": "stop apache",
        "type": "custom",
        "commandLine": "sudo service apache2 stop",
        "attributes": {
          "previewUrl": ""
        }
      },
      {
        "name": "restart apache",
        "type": "custom",
        "commandLine": "sudo service apache2 restart",
        "attributes": {
          "previewUrl": "http://${server.port.80}/${current.project.relpath}"
        }
      }
    ],
    "links": [],
    "category": "Samples",
    "tags": [
      "apache",
      "php"
    ]
  },
  {
    "name": "console-java-simple",
    "displayName": "console-java-simple",
    "path": "/console-java-simple",
    "description": "A hello world Java application.",
    "projectType": "maven",
    "mixins": [],
    "attributes": {
      "language": [
        "java"
      ]
    },
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/che-samples/console-java-simple.git",
      "parameters": {}
    },
    "commands": [
      {
        "name": "build",
        "type": "mvn",
        "commandLine": "mvn -f ${current.project.path} clean install",
        "attributes": {
          "previewUrl": ""
        }
      },
      {
        "name": "run",
        "type": "mvn",
        "commandLine": "mvn -f ${current.project.path} clean install && java -jar ${current.project.path}/target/*.jar",
        "attributes": {
          "previewUrl": ""
        }
      }
    ],
    "links": [],
    "category": "Samples",
    "tags": [
      "java",
      "maven"
    ]
  },
  {
    "name": "console-dotnet-simple",
    "displayName": "console-dotnet-simple",
    "path": "/console-dotnet-simple",
    "description": "The app will print current date to the console.",
    "projectType": "blank",
    "mixins": [],
    "attributes": {
      "language": [
        "dotnet"
      ]
    },
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/che-samples/console-dotnet-simple.git",
      "parameters": {}
    },
    "commands": [
      {
        "name": "update dependencies",
        "type": "custom",
        "commandLine": "cd ${current.project.path} && dnu restore",
        "attributes": {
          "previewUrl": ""
        }
      },
      {
        "name": "run",
        "type": "custom",
        "commandLine": "dnx -p ${current.project.path}/project.json run",
        "attributes": {
          "previewUrl": ""
        }
      }
    ],
    "links": [],
    "category": "Samples",
    "tags": [
      "dotnet",
      "dnx",
      "mono"
    ]
  },
  {
    "name": "web-aspnet-simple",
    "displayName": "web-aspnet-simple",
    "path": "/web-aspnet-simple",
    "description": "Sample web application with asp.net.",
    "projectType": "blank",
    "mixins": [],
    "attributes": {
      "language": [
        "aspnet"
      ]
    },
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/che-samples/web-aspnet-simple.git",
      "parameters": {}
    },
    "commands": [
      {
        "name": "update dependencies",
        "type": "custom",
        "commandLine": "cd ${current.project.path} && dnu restore",
        "attributes": {
          "previewUrl": ""
        }
      },
      {
        "name": "run",
        "type": "custom",
        "commandLine": "dnx -p ${current.project.path}/project.json web",
        "attributes": {
          "previewUrl": "http://${server.port.5004}"
        }
      }
    ],
    "links": [],
    "category": "Samples",
    "tags": [
      "aspnet",
      "dnx",
      "mono"
    ]
  },
  {
    "name": "web-javaee-jaxrs",
    "displayName": "web-javaee-jaxrs",
    "path": "/web-javaee-jaxrs",
    "description": "A basic example demonstrating JAXRS running on Apache TomEE",
    "projectType": "maven",
    "mixins": [],
    "attributes": {
      "language": [
        "java"
      ]
    },
    "modules": [],
    "problems": [],
    "source": {
      "type": "git",
      "location": "https://github.com/tomitribe/tomee-jaxrs-angular-starter-project.git",
      "parameters": {}
    },
    "commands": [
      {
        "name": "build",
        "type": "mvn",
        "commandLine": "mvn -f ${current.project.path} clean install && cp ${current.project.path}/target/*.war $TOMEE_HOME/webapps/ROOT.war",
        "attributes": {
          "previewUrl": ""
        }
      },
      {
        "name": "run tomee",
        "type": "custom",
        "commandLine": "$TOMEE_HOME/bin/catalina.sh run",
        "attributes": {
          "previewUrl": "http://${server.port.8080}"
        }
      },
      {
        "name": "stop tomee",
        "type": "custom",
        "commandLine": "$TOMEE_HOME/bin/catalina.sh stop",
        "attributes": {
          "previewUrl": ""
        }
      },
      {
        "name": "build and run",
        "type": "mvn",
        "commandLine": "mvn -f ${current.project.path} clean install && cp ${current.project.path}/target/*.war $TOMEE_HOME/webapps/ROOT.war && $TOMEE_HOME/bin/catalina.sh run",
        "attributes": {
          "previewUrl": "http://${server.port.8080}"
        }
      },
      {
        "name": "debug",
        "type": "mvn",
        "commandLine": "mvn -f ${current.project.path} clean install && cp ${current.project.path}/target/*.war $TOMEE_HOME/webapps/ROOT.war && $TOMEE_HOME/bin/catalina.sh jpda run",
        "attributes": {
          "previewUrl": "http://${server.port.8080}"
        }
      }
    ],
    "links": [],
    "category": "Samples",
    "tags": [
      "maven",
      "java",
      "javaee",
      "jaxrs"
    ]
  }
]
